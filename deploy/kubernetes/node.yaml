#TODO: Force DaemonSet to not run on master.
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-gce-node
spec:
  selector:
    matchLabels:
      app: csi-gce-driver
  serviceName: csi-gce
  template:
    metadata:
      labels:
        app: csi-gce-driver
    spec:
      serviceAccount: csi-gce-pd
      containers:
        - name: csi-driver-registrar
          imagePullPolicy: Always
          image: gcr.io/dyzz-csi-staging/csi/driver-registrar:latest
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
          #  - name: registrar-socket-dir
          #    mountPath: /var/lib/csi/sockets/
        - name: gce-driver
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          imagePullPolicy: Always
          image: gcr.io/dyzz-csi-staging/csi/gce-driver:latest
          args:
            - "--v=5"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
            #TODO: Don't hardcode project
            - "--project=dyzz-test"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: plugin-dir
              mountPath: /csi
            - name: device-dir
              mountPath: /host/dev
      volumes:
        # TODO(dependency): this will work when kublet registrar functionality exists
        #- name: registrar-socket-dir
        #  hostPath:
        #    path: /var/lib/kubelet/device-plugins/
        #    type: DirectoryOrCreate
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi-gce/
            type: DirectoryOrCreate
        - name: device-dir
          hostPath:
            path: /dev
            type: Directory